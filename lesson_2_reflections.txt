What happens when you initialize a repository? Why do you need to do it?

	When you initilize a repository, you're then able to commit files
	to the repository. You need to do this in order to have a history of your
	commits.
 
How is the staging area different from the working directory and the 
repository? What value do you think it offers?

	The staging area is different than the working directory and the 
	repository because it is an area in betweeen those two. The items
	in the staging area is being prepared to part of a repository.

How can you use the staging area to make sure you have one commit per 
logical change?

	You can compare the staging area with the current repository commit, 
	using git diff --staged.

What are some situations when branches would be helpful in keeping your 
history organized? How would branches help?
	
	Branches are helpful if you want to keep a working rendition of your
	current program and want to make some experimental changes or drastic
	changes to it without affecting the master branch.

How do the diagrams help you visualize the branch structure?

	It shows how each commit is relative to one another.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	
	You combine two branches to get one branch which combines the content of
	 both branch. It is represented this way because these data are combined.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing 
merges manually?

	Automatic merges is faster, but it wont work if there are are conflicts.
	Manual merges are slower, but there will be no conflicts.